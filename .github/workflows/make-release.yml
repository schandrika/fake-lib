name: Deploy Release Artifacts

on:
  workflow_dispatch:
    inputs:
      merge-strategy:
        description: 'Merge strategy and strategy options. Used only in case of merge conflicts'
        required: false
        default: ''
        type: string
      release-version:
        description: 'Version number to use. If provided bump-rule will be ignored'
        required: false
        default: ''
        type: string
      bump-rule:
        description: 'Bump rule for computing next release version number.'
        required: false
        default: 'prerelease'
        type: choice
        options:
          - patch
          - minor
          - major
          - prepatch
          - preminor
          - premajor
          - prerelease
      run-tests-wait:
        description: 'Wait time to run test after merge to main'
        required: false
        default: 600
        type: number
      publish-to-test-pypi:
        description: 'Set to true if you want to publish to https://test.pypi.org/legacy/ instead of pypi.org'
        required: false
        default: true
        type: boolean

defaults:
  run:
    shell: bash

env:
  LANG: en_US.utf-8
  LC_ALL: en_US.utf-8
  PYTHON_VERSION: '3.10'

jobs:
  deploy-release:
    runs-on: ubuntu-22.04
    steps:

      #----------------------------------------------
      #       check-out repo and set-up python
      #----------------------------------------------
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: develop

      - name: Set up Python ${{ env.PYTHON_VERSION }}
        id: setup-python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      #----------------------------------------------
      #  -----  install & configure poetry  -----
      #----------------------------------------------
      - name: Install Poetry
        uses: snok/install-poetry@v1.3.4
        with:
          virtualenvs-create: true
          virtualenvs-in-project: true
          installer-parallel: true

      #----------------------------------------------
      # install your root project, if required
      #----------------------------------------------
      - name: Install library
        run: |
          poetry lock --no-update
          poetry install --no-interaction 

